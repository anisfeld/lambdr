% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lambda-setup.R
\name{start_lambda}
\alias{start_lambda}
\title{Set the environment up for AWS Lambda and listen for events}
\usage{
start_lambda(
  log_threshold = logger::INFO,
  handler = NULL,
  runtime_api = NULL,
  task_root = NULL,
  environ = parent.frame(),
  deserialiser = NULL,
  serialiser = NULL,
  timeout_seconds = NULL
)
}
\arguments{
\item{log_threshold}{Threshold for recording and displaying log entries.
Defaults to \code{logger::INFO}. To debug a failing Lambda container, set this
to \code{logger::DEBUG} to log verbose information about how each request is
processed.}

\item{handler}{character. Name of function to use for processing inputs from
events. This argument is provided for debugging and testing only. The
"_HANDLER" environment variable, as configured in AWS, as configured by
AWS, will always override this value if present.}

\item{runtime_api}{character. Used as the host in the various endpoints used
by AWS Lambda. This argument is provided for debugging and testing only.
The "AWS_LAMBDA_RUNTIME_API" environment variable, as configured by AWS,
will always override this value if present.}

\item{task_root}{character. Defines the path to the Lambda function code.
This argument is provided for debugging and testing only. The
"LAMBDA_TASK_ROOT" environment variable, as configured by AWS, will always
override this value if present.}

\item{environ}{environment in which to search for the function given by the
handler.}

\item{deserialiser}{function for deserialising the body of the event.
By default, will attempt to deserialise the body as JSON, based on whether
the input is coming from an API Gateway, scheduled Cloudwatch event, or
direct. To use the body as is, pass the \code{identity} function.}

\item{serialiser}{function for serialising the result before sending.
By default, will attempt to serialise the body as JSON, based on the
request type. To send the result as is, pass the \code{identity} function.}

\item{timeout_seconds}{If set, the function will stop listening for events
after this timeout. The timeout is checked between events, so this won't
interrupt the function while it is waiting for a new event. This argument
is provided for testing purposes, and shouldn't otherwise need to be set:
AWS should handle the shutdown of idle Lambda instances.}
}
\description{
Combines \verb{\link{setup_lambda}} and \verb{\link{start_listening}}.
}
\section{AWS Lambda variables}{


The following variables are made available through environment variables
configured by AWS:
\itemize{
\item Lambda Runtime API, available as the "AWS_LAMBDA_RUNTIME_API" environment
variable, is the host of the various HTTP endpoints through which the
runtime interacts with Lambda. See also: \verb{\link{endpoints}}.
\item Lambda Task Root, available as the "LAMBDA_TASK_ROOT" environment variable,
defines the path to the Lambda function code.
\item The handler, available as the "_HANDLER" environment variable, is
interpreted by R as the function that is executed when the Lambda is
called. This value could be anything, as the interpretation is solely up
to the runtime, so requiring it to be a function is a standard imposed by
this package.
}
}

