% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/start-listening.R
\name{wait_for_and_handle_event}
\alias{wait_for_and_handle_event}
\title{Query the next invocation endpoint to get the next input}
\usage{
wait_for_and_handle_event(deserialiser = NULL, serialiser = NULL)
}
\arguments{
\item{deserialiser}{function for deserialising the body of the event.
By default, will attempt to deserialise the body as JSON, based on whether
the input is coming from an API Gateway, scheduled Cloudwatch event, or
direct. To use the body as is, pass the \code{identity} function. If input is
coming via an API Gateway this will require some complicated parsing (see
below).}

\item{serialiser}{function for serialising the result before sending.
By default, will attempt to serialise the body as JSON, based on the
request type. To send the result as is, pass the \code{identity} function.}
}
\description{
The query will receive a response when an input is queued up. If there is no
input waiting, the Lambda instance will be shut down after a period of
inactivity.
}
\keyword{internal}
