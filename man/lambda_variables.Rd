% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setup-lambda.R
\name{lambda_variables}
\alias{lambda_variables}
\alias{get_lambda_runtime_api}
\alias{get_lambda_task_root}
\alias{get_handler}
\alias{get_handler_character}
\title{Retrieve AWS Lambda configuration values}
\usage{
get_lambda_runtime_api()

get_lambda_task_root()

get_handler()

get_handler_character()
}
\value{
character
}
\description{
These functions can only be called after the \code{setup_lambda} function has
been run. They return the various configuration values provided by AWS
Lambda. These values are described in the section below.

The handler, as a character, is returned by \code{get_handler_character}. The
function defined by the handler is returned by \code{get_handler}.
}
\section{AWS Lambda variables}{


The \code{\link{setup_lambda}} function, which is also run as part of
\code{\link{start_lambda}} configures the R session for Lambda based on
environment variables made available by Lambda. The following environment
variables are available:
\itemize{
\item Lambda Runtime API, available as the "AWS_LAMBDA_RUNTIME_API" environment
variable, is the host of the various HTTP endpoints through which the
runtime interacts with Lambda.
\item Lambda Task Root, available as the "LAMBDA_TASK_ROOT" environment variable,
defines the path to the Lambda function code. It isn't used in container
environments with a custom runtime, as that runtime is responsible for
finding and sourcing the function code.
\item The handler, available as the "_HANDLER" environment variable, is
interpreted by R as the function that is executed when the Lambda is
called. This value could be anything, as the interpretation is solely up
to the runtime, so requiring it to be a function is a standard imposed by
this package.
}
}

\keyword{internal}
